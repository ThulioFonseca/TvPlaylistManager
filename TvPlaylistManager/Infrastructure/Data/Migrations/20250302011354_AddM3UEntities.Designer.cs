// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TvPlaylistManager.Infrastructure.Data;

#nullable disable

namespace TvPlaylistManager.Infrastructure.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250302011354_AddM3UEntities")]
    partial class AddM3UEntities
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.2");

            modelBuilder.Entity("TvPlaylistManager.Domain.Models.Epg.EpgChannel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ChannelEpgId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("EpgSourceId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("IconUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("Keywords")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ChannelEpgId");

                    b.HasIndex("EpgSourceId");

                    b.ToTable("EpgChannel");
                });

            modelBuilder.Entity("TvPlaylistManager.Domain.Models.Epg.EpgSource", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Alias")
                        .IsUnique();

                    b.HasIndex("Url")
                        .IsUnique();

                    b.ToTable("EpgSources");
                });

            modelBuilder.Entity("TvPlaylistManager.Domain.Models.M3u.M3UChannel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("ChannelGroupId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TvgId")
                        .HasColumnType("TEXT");

                    b.Property<string>("TvgLogo")
                        .HasColumnType("TEXT");

                    b.Property<string>("TvgName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ChannelGroupId");

                    b.ToTable("M3UChannel");
                });

            modelBuilder.Entity("TvPlaylistManager.Domain.Models.M3u.M3UChannelGroup", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("M3UPlaylistId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("M3UPlaylistId");

                    b.ToTable("M3UChannelGroup");
                });

            modelBuilder.Entity("TvPlaylistManager.Domain.Models.M3u.M3UPlaylist", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<long?>("EpgSourceId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EpgSourceId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("Url")
                        .IsUnique();

                    b.ToTable("M3UPlaylist");
                });

            modelBuilder.Entity("TvPlaylistManager.Domain.Models.Epg.EpgChannel", b =>
                {
                    b.HasOne("TvPlaylistManager.Domain.Models.Epg.EpgSource", "EpgSource")
                        .WithMany("Channels")
                        .HasForeignKey("EpgSourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EpgSource");
                });

            modelBuilder.Entity("TvPlaylistManager.Domain.Models.M3u.M3UChannel", b =>
                {
                    b.HasOne("TvPlaylistManager.Domain.Models.M3u.M3UChannelGroup", "ChannelGroup")
                        .WithMany("Channels")
                        .HasForeignKey("ChannelGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChannelGroup");
                });

            modelBuilder.Entity("TvPlaylistManager.Domain.Models.M3u.M3UChannelGroup", b =>
                {
                    b.HasOne("TvPlaylistManager.Domain.Models.M3u.M3UPlaylist", "M3UPlaylist")
                        .WithMany("ChannelGroups")
                        .HasForeignKey("M3UPlaylistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("M3UPlaylist");
                });

            modelBuilder.Entity("TvPlaylistManager.Domain.Models.M3u.M3UPlaylist", b =>
                {
                    b.HasOne("TvPlaylistManager.Domain.Models.Epg.EpgSource", "EpgSource")
                        .WithMany()
                        .HasForeignKey("EpgSourceId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("EpgSource");
                });

            modelBuilder.Entity("TvPlaylistManager.Domain.Models.Epg.EpgSource", b =>
                {
                    b.Navigation("Channels");
                });

            modelBuilder.Entity("TvPlaylistManager.Domain.Models.M3u.M3UChannelGroup", b =>
                {
                    b.Navigation("Channels");
                });

            modelBuilder.Entity("TvPlaylistManager.Domain.Models.M3u.M3UPlaylist", b =>
                {
                    b.Navigation("ChannelGroups");
                });
#pragma warning restore 612, 618
        }
    }
}
